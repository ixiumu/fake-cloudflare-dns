name: Go

on:
  workflow_dispatch:
  release:
    types: [published]
  push:

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

          - goos: android
            goarch: arm64

          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7
          - goos: linux
            goarch: riscv64
          - goos: linux
            goarch: mips64
          - goos: linux
            goarch: mips64le
          - goos: linux
            goarch: mips
          - goos: linux
            goarch: mipsle

          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: 386

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0

      - name: Show workflow information
        run: |
          export _NAME=${{ steps.repo-name.outputs.repository-name }}_$GOOS-$GOARCH$GOARM$GOMIPS
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV
          echo "REF=${GITHUB_SHA::6}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true

      - name: Cache wintun
        id: cache
        uses: actions/cache@v4
        if: matrix.goos == 'windows'
        env:
          cache-name: cache-wintun
        with:
          path: ~/wintun-0.14.1.zip
          key: wintun-0.14.1.zip

      - name: Download wintun
        if: matrix.goos == 'windows' && steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -LO https://www.wintun.net/builds/wintun-0.14.1.zip --output-dir ~/
          ls -lah ~/

      - name: Validate wintun
        if: matrix.goos == 'windows'
        run: |
          pushd ~/
          echo "07c256185d6ee3652e09fa55c0b673e2624b565e02c4b9091c79ca7d2f24ef51 wintun-0.14.1.zip" | sha256sum --check --status
          unzip ~/wintun-0.14.1.zip -d ~/wintun
          popd

      - name: Build
        run: |
          go build -v -o ${{ env.ASSET_NAME }}/ -trimpath -ldflags "-s -w -buildid= -X main.version=${{ github.ref }}" .
          go build -v -o ${{ env.ASSET_NAME }}/ -trimpath -ldflags "-s -w -buildid= -X main.version=${{ github.ref }}" .

      - name: Copy README.md & LICENSE
        run: |
          cp ${GITHUB_WORKSPACE}/README.md ./${{ env.ASSET_NAME }}/README.md
          cp ${GITHUB_WORKSPACE}/LICENSE ./${{ env.ASSET_NAME }}/LICENSE

      - name: Redistribute wintun.dll
        if: matrix.goos == 'windows'
        run: |
          if [ "$GOARCH" = "amd64" ]; then
            mv ~/wintun/wintun/bin/amd64/wintun.dll ./${{ env.ASSET_NAME }}/
          elif [ "$GOARCH" = "arm64" ]; then
            mv ~/wintun/wintun/bin/arm64/wintun.dll ./${{ env.ASSET_NAME }}/
          elif [ "$GOARCH" = "386" ]; then
            mv ~/wintun/wintun/bin/x86/wintun.dll ./${{ env.ASSET_NAME }}/
          fi

      - name: Create ZIP archive
        shell: bash
        run: |
          pushd ./${{ env.ASSET_NAME }} || exit 1
          touch -mt $(date +%Y01010000) *
          zip -9vr ../${{ env.ASSET_NAME }}.zip .
          popd || exit 1
          FILE=./${{ env.ASSET_NAME }}.zip
          DGST=$FILE.dgst
          for METHOD in {"md5","sha256","sha512"}
          do
            openssl dgst -$METHOD $FILE | sed 's/([^)]*)//g' >>$DGST
          done

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_NAME }}_${{ env.REF }}
          path: |
            ./${{ env.ASSET_NAME }}/*

      - name: Upload warp-scan files to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ASSET_NAME }}_${{ env.REF }}
          path: |
            ./${{ env.ASSET_NAME }}/*

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./${{ env.ASSET_NAME }}.zip*
          tag: ${{ github.ref }}
          file_glob: true